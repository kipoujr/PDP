Προσέγγιση:
Οι λέξεις μήκους Κ είναι 26^Κ.
Η ιδέα είναι να μετρήσουμε τις λέξεις που δεν έχουν κανένα από τους κωδικούς ως substring, και κατόπιν να αφαιρέσουμε αυτό το πλήθος από το 26^Κ.

Γενικές σκέψεις:
Έστω ότι γνωρίζουμε πόσες λέξεις μήκους (Κ-1) δεν έχουν κανέναν από τους ζητούμενους κωδικούς ΚΑΙ τελειώνουν σε x (όπου x κάποιο κείμενο).
Η βασική παρατήρηση είναι ότι όπως οι λέξεις αυτές θα μεγαλώσουν από μέγεθος (Κ-1) σε Κ, μπορεί κάποια suffixes, μεγαλώνοντας κατά ένα γράμμα, να γίνουν κωδικοί. Έτσι θα πάψουν αυτές οι λέξεις να μην έχουν κωδικούς.
Αντιλαμβανόμαστε λοιπόν ότι τα κείμενα x που μας ενδιαφέρουν είναι αυτά που είναι prefixes των κωδικών (καθώς μεγαλώνοντας μπορεί να γίνουν κωδικοί).

Λύση:
Έστω amount(x,k) το πλήθος λέξεων μεγέθους k που τελειώνουν σε x, όπου x το μέγιστο prefix κωδικού. Με αυτό εννοούμε ότι αν υπάρχει ένας κωδικός aa, τότε η λέξη baa θεωρούμε ότι τελειώνει σε aa μόνο, παρότι τελειώνει και σε a.
Έστω ότι προσθέτουμε ένα γράμμα στο τέλος μίας λέξης μεγέθους k, η οποία τελειώνει σε x. Με χρήση του δέντρου aho-corasick μπορούμε σε Ο(1) να βρούμε το καινούριο x' στο οποίο τελειώνει η αυξημένη λέξη.
Αν το καινούριο x' είναι ολόκληρος κωδικός, δεν κάνουμε τίποτα. Αν δεν είναι, τότε το amount(x',k+1) αυξάνεται κατά amount(x,k).
Επομένως για να περάσουμε από το k στο (k+1) αρκεί να ελέγξουμε κάθε ένα από τα 2.000 πιθανά prefix κωδικών και να δοκιμάσουμε να τους προσθέσουμε κάθε ένα από τα 26 γράμματα.

Το άθροισμα όλων των amount(*,K) είναι το πλήθος των λέξεων μήκους Κ που δεν περιέχουν κανένα κωδικό. Το αφαιρούμε από το 26^Κ και παίρνουμε την απάντηση.

Πολυπλοκότητα: O(numberOfLetters * totalLengthOfWords * K), δηλαδή 26*2000*5000, και δίνονται 3 δευτερόλεπτα, οπότε είναι αρκετά γρήγορο.
